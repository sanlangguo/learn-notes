上海享物说

1.HTTP 和 HTTPS 详细握手和HTTP缓存
2.浏览器的垃圾回收机制和浏览器的渲染原理
3.Html 块级元素和行内元素的区别，替换元素（input）的特点
https://segmentfault.com/a/1190000006835284
4.算法
5.Map,Set,WeakMap

6.css 居中方式


1.js 如何获取demo元素
2.动画的简单动效 （圆圈画圆过程）

  var canvas = document.getElementById("canvas");
  var ctx = canvas.getContext("2d");
  ctx.beginPath();
  ctx.arc(75, 75, 50, 0, 2 * Math.PI);
  ctx.stroke();



掌门一对一

1.h5是什么
2.var let const 的区别
3.如何三栏布局兼容问题
https://segmentfault.com/a/1190000019269901

云仓

1.数组map和 forEach 区别， Array.form （便捷数组操作），数组求和
到底有什么区别呢？forEach()方法不会返回执行结果，而是undefined。也就是说，forEach()会修改原来的数组。而map()方法会得到一个新的数组并返回。

数组求和: 
https://blog.csdn.net/YANG_Gang2017/article/details/72571505
eval([1,2,4].join("+"))

2.css居中的方式
3.margin,padding
4.深拷贝 

快云

1.css 上下三栏布局，底部一直在页面底部
  https://codepen.io/una/pen/bGVXPWB
  https://github.com/sanlangguo/learn-notes/wiki/footer-%E4%B8%80%E7%9B%B4%E5%9C%A8%E5%BA%95%E9%83%A8%E4%BD%8D%E7%BD%AE

2.js 原型

3.wekpack 的原理

4.node js

诺亚财富

1.css 左右布局，左固定 兼容写法
https://www.cxyzjd.com/article/yinkaihui/49851773
2.js 各种循环的理解

3.css box-sizing
4.webpack 多页面配置
5.vue 组件之间的传值
6.js 大文件上传
7.vuex更改组件状态，刷新状态是否改变
https://www.huaweicloud.com/articles/13698538.html
8.终止循环 break return continue
  https://blog.csdn.net/XXJ19950917/article/details/78310346

JD （偏向原理和基础）

1.rem em vh vw 原理
https://zhuanlan.zhihu.com/p/96721026
2. vue文件编译原理
  https://cloud.tencent.com/developer/article/1601614
  https://github.com/berwin/Blog/issues/18
  https://www.cnblogs.com/skywind/p/14653339.html#12-vuejs-%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E7%9A%84%E5%8E%9F%E7%90%86
3.css 五种不同颜色圆环
  参考 https://www.zhangxinxu.com/wordpress/2017/11/pure-css-colorful-circle/
  dom地址 https://codepen.io/sanlangguo/pen/abdaqWP
4.js 和 底层（ios android） 沟通原理
  https://www.zoo.team/article/jsbridge

5.this.nextTick() 原理 100次更新dem 执行一次 (更新dom 为什么是异步的)
https://github.com/berwin/Blog/issues/22

6. 盒模型理解 BFC 实现方式 解决了哪些问题

CSS中组成一个块级盒子需要:
  Content box: 这个区域是用来显示内容，大小可以通过设置 width 和 height.
  Padding box: 包围在内容区域外部的空白区域； 大小通过 padding 相关属性设置。
  Border box: 边框盒包裹内容和内边距。大小通过 border 相关属性设置。
  Margin box: 这是最外面的区域，是盒子和其他元素之间的空白区域。大小通过 margin 相关属性设置。
  
产生BFC的方法：
  float有值且不为空。
  overflow有值且不为visible。
  display有值为：inline-block，table-cell，flow-root，table-caption，inline-flex中的一个。
  position有值为absolute或者fixed。
  
BFC可以解决哪些问题：
  1、BFC全称：Block Formatting Context，译为块级格式化上下文，它是CSS2.1规范定义的，关于CSS渲染定位的一个概念
  2、能够解决因浮动造成的父元素塌陷问题
  3、能够解决div浮动造成的遮盖问题【overflow:hidden; 触发bfc来解决遮挡问题】
  4、解决margin塌陷问题【overflow:hidden; 产生bfc来解决】
  

7. 1像素问题
  https://segmentfault.com/a/1190000007604842
  
8. 小程序原理
https://zhaomenghuan.js.org/blog/wechat-miniprogram-principle-analysis.html#%E5%89%8D%E8%A8%80

银科

1.js 数组的方法
2.深浅拷贝
https://segmentfault.com/a/1190000018874254

3.AMD/CMD
https://juejin.cn/post/6844903576309858318#heading-0
https://es6.ruanyifeng.com/#docs/module-loader

4.SSR/SEO
5.css居中
6.最小像素
7.rem px 区别
8.1px 的实现
9.小程序支付，关注公众号组件的限制
10.微信用户授权流程
11.小程序和微信的联动引流
12.微信支付，微信分享，小程序识别二维码
13.webpack 优化
14.vue 双向绑定原理
15.断点续传


上海汇付

1.原型和继承
2.this
3.事件循环 await async
4.promise 实现
5.css 三栏布局
6.webpack 核心
7.cookie HTTP-only 不能获取cookie
8.vue 双向绑定原理
9.vue-router hash history 核心理解
10.减少回流


上海银科 二面

1.url浏览器详细渲染
2.直播相关技术
3.前端安全
4.git flow
5.ssl openssl
  https://www.zhihu.com/question/23341334


信也科技（拍拍贷）

1.vue react 区别
2.computed watch methods 区别
3.css 进度条
  https://cloud.tencent.com/developer/article/1572870
4.promise 异步原理
6.react native 原理
7.vue 文件编译原理
8.自身项目的亮点
9.webpack hot 原理
10.node 中间件
11.react hooks
12.react setState 同步或者异步

美团

1.跨域 cros
2.webpack 原理和 plugin
  https://blog.csdn.net/Aria_Miazzy/article/details/106235716
3.如何提高 webpack 打包速度
4.vue react 生命周期的不同
5.native 怎么 h5沟通
6.h5 怎么沟通 native
8.前端性能指标
9.前端埋点
10.http 请求post, put
11.复杂请求和简单请求 http


2021-05-08
uclund
1.xcrf 攻击防护
2.强缓存和弱缓存
3.图片 url 自定义请求头
4.强刷新，不缓存


2021-08-30
得物app
1.vue 响应式原理
2.object.defineProperty() 优缺点
3.vue watcher 原理
4.react hook 原理--- 为什么是单链表
5.map object 的区别
6.async/await 与 promise 区别
7.事件循环
9.settimeout 内有 promiese.then, 里面的执行顺序
10. get post 区别
11. url 输入的过程
12. 哪些情况会阻塞 dom 的 渲染
13. 加载中文字体--》
14. webpack 构建过程和优化
15. 强缓存和弱缓存
16. proxy 的使用场景和使用
17. dns 预加载
























